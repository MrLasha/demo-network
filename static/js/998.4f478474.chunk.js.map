{"version":3,"file":"static/js/998.4f478474.chunk.js","mappings":"mRACA,EAA4B,2BAA5B,EAA+D,uBCA/D,EAAuB,mB,SCavB,EAXa,SAACA,GACZ,OAAOC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,OAAAD,SAAMJ,EAAMM,WACZD,EAAAA,EAAAA,KAAA,OAAKE,IAAI,gEACTF,EAAAA,EAAAA,KAAA,OAAAD,UACEH,EAAAA,EAAAA,MAAA,QAAAG,SAAA,CAAM,QAAMJ,EAAMQ,kBAIxB,ECPMC,EAAUC,EAAAA,MAAW,SAACV,GAC1B,IAAIW,EAAgBX,EAAMY,MAAMC,KAAI,SAACC,GAAC,OACpCT,EAAAA,EAAAA,KAACU,EAAI,CAACT,QAASQ,EAAEE,QAASR,WAAYM,EAAEN,YAAiBM,EAAEG,GAAM,IAEnE,OACEZ,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAYC,UAC1BH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CAAK,YAEHC,EAAAA,EAAAA,KAACa,EAAW,CAAClB,MAAOA,KACpBK,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAQC,SAAEO,WAKpC,IAEMO,EAAc,SAAHC,GAAmB,IAAbnB,EAAKmB,EAALnB,MAIrB,OACEK,EAAAA,EAAAA,KAACe,EAAAA,GAAM,CAACC,cAAe,CAAEC,YAAa,IAAMC,SAJ9B,SAACC,GACfxB,EAAMyB,QAAQD,EAAOF,YACvB,EAEkElB,UAC9DH,EAAAA,EAAAA,MAACyB,EAAAA,GAAI,CAAAtB,SAAA,EACHC,EAAAA,EAAAA,KAACsB,EAAAA,GAAK,CACJC,GAAI,WACJC,YAAa,gBACbC,KAAM,iBAERzB,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,UAAQ0B,KAAK,SAAQ3B,SAAC,oBAKhC,EAEA,ICrBA,GAFyB4B,EAAAA,EAAAA,KAfH,SAACC,GACrB,MAAO,CACLrB,MAAOqB,EAAMC,YAAYtB,MACzBU,YAAaW,EAAMC,YAAYZ,YAEnC,IAEyB,SAACa,GACxB,MAAO,CACLV,QAAS,SAACH,GACRa,GAASC,EAAAA,EAAAA,IAAqBd,GAChC,EAEJ,GAEyBU,CAA6CvB,G,oBCnBtE,EAAmC,sCAAnC,EAAqF,+BAArF,EAA8H,6BC+C9H,EA7C+B,SAACT,GAC9B,IAAAqC,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC1BI,GAA0BL,EAAAA,EAAAA,UAAStC,EAAM4C,QAAOC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA3CC,EAAMC,EAAA,GAAEC,EAASD,EAAA,IAEtBE,EAAAA,EAAAA,YAAU,WACRD,EAAU9C,EAAM4C,OAClB,GAAG,CAAC5C,EAAM4C,SAeV,OACE3C,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACIqC,IACAxC,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cACHH,EAAAA,EAAAA,MAAA,QAAM+C,cAlBW,WACvBN,GAAY,EACd,EAgB8CtC,SAAA,CACnCJ,EAAM4C,QAAU,YAAa,UAInCH,IACCpC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,SACE4C,WAAW,EACXC,OAvBiB,WACzBR,GAAY,GACZ1C,EAAMmD,aAAaP,EACrB,EAqBUQ,SAnBa,SAACC,GACtBP,EAAUO,EAAEC,cAAcC,MAC5B,EAkBUA,MAAOX,QAMnB,E,oBCzCMY,EAAmBC,EAAAA,GAAW,CAClCC,QAASD,EAAAA,KACNE,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZC,SAAUL,EAAAA,KAAaI,SAAS,YAChCE,SAAUN,EAAAA,GAAW,CACnBO,SAAUP,EAAAA,KAAaQ,IAAI,eAC3BC,QAAST,EAAAA,KAAaQ,IAAI,eAC1BE,GAAIV,EAAAA,KAAaQ,IAAI,eACrBG,QAASX,EAAAA,KAAaQ,IAAI,eAC1BI,UAAWZ,EAAAA,KAAaQ,IAAI,eAC5BK,QAASb,EAAAA,KAAaQ,IAAI,eAC1BM,OAAQd,EAAAA,KAAaQ,IAAI,eACzBO,SAAUf,EAAAA,KAAaQ,IAAI,mBAuF/B,EAnFwB,SAAH9C,GAA8C,IAAxCI,EAAQJ,EAARI,SAAUF,EAAaF,EAAbE,cAAeoD,EAAOtD,EAAPsD,QAClD,OACEpE,EAAAA,EAAAA,KAACe,EAAAA,GAAM,CACLoC,iBAAkBA,EAClBnC,cAAeA,EACfE,SAAUA,EAASnB,UAEnBH,EAAAA,EAAAA,MAACyB,EAAAA,GAAI,CAAAtB,SAAA,EACHC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,UAAQ0B,KAAM,SAAUd,GAAI,SAAUa,KAAM,SAAS1B,SAAC,YAIxDH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,iBAELC,EAAAA,EAAAA,KAACsB,EAAAA,GAAK,CACJE,YAAa,WACbE,KAAM,WACNd,GAAI,UACJa,KAAM,aAERzB,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACqE,EAAAA,GAAY,CAAC5C,KAAK,kBAGvB7B,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wBACHC,EAAAA,EAAAA,KAACsB,EAAAA,GAAK,CAACI,KAAM,WAAYD,KAAM,uBAEjC7B,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sCAELC,EAAAA,EAAAA,KAACsB,EAAAA,GAAK,CACJE,YAAa,cACbE,KAAM,WACNd,GAAI,4BACJa,KAAM,+BAERzB,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACqE,EAAAA,GAAY,CAAC5C,KAAK,oCAGvB7B,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,kBAELC,EAAAA,EAAAA,KAACsB,EAAAA,GAAK,CACJE,YAAa,YACbE,KAAM,WACNd,GAAI,WACJa,KAAM,cAERzB,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACqE,EAAAA,GAAY,CAAC5C,KAAK,mBAGvBzB,EAAAA,EAAAA,KAAA,OAAAD,SACGuE,OAAOC,KAAKH,EAAQV,UAAUlD,KAAI,SAACgE,GAClC,OACE5E,EAAAA,EAAAA,MAAA,OAAeC,UAAWC,EAAUC,SAAA,EAClCH,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CACGyE,EAAI,IAAE,KACPxE,EAAAA,EAAAA,KAACsB,EAAAA,GAAK,CACJI,KAAM,QACND,KAAM,YAAc+C,EACpBhD,YAAagD,QAGjBxE,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACqE,EAAAA,GAAY,CAAC5C,KAAI,YAAAgD,OAAcD,SAV1BA,EAcd,UAKV,ECpCME,EAAc,SAAHC,GAA4C,IAAtCP,EAAOO,EAAPP,QAASQ,EAAOD,EAAPC,QAASC,EAAYF,EAAZE,aACvC,OACEjF,EAAAA,EAAAA,MAAA,OAAAG,SAAA,CACG6E,IACC5E,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,UAAQ8E,QAASD,EAAa9E,SAAC,YAGnCH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cAAa,IAAEqE,EAAQf,SAAW,UAEvCzD,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,uBACFqE,EAAQW,eAAiB,MAAQ,SAEpCnF,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,mCACFqE,EAAQY,8BAEXpF,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eAAc,IAAEqE,EAAQX,aAE7B7D,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,aAAY,IAAE,IAChBuE,OAAOC,KAAKH,EAAQV,UAAUlD,KAAI,SAACgE,GAClC,OACExE,EAAAA,EAAAA,KAACiF,EAAO,CAENC,aAAcV,EACdW,aAAcf,EAAQV,SAASc,IAF1BA,EAKX,SAIR,EAEMS,EAAU,SAAHG,GAAwC,IAAlCF,EAAYE,EAAZF,aAAcC,EAAYC,EAAZD,aAC/B,OACEvF,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAUC,SAAA,EACxBH,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAImF,EAAa,QAAM,IAAEC,IAG/B,EAEA,EA3GoB,SAAHrE,GAOV,IANLsD,EAAOtD,EAAPsD,QACA7B,EAAMzB,EAANyB,OACAO,EAAYhC,EAAZgC,aACA8B,EAAO9D,EAAP8D,QACAS,EAASvE,EAATuE,UACAC,EAAWxE,EAAXwE,YAEAtD,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAE1B,IAAKkC,EACH,OAAOpE,EAAAA,EAAAA,KAACuF,EAAAA,EAAS,IAYnB,OACE3F,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,OAAKE,IAAI,yJAEXN,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAmBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACwF,EAAsB,CAACjD,OAAQA,EAAQO,aAAcA,OAExDlD,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEE,IAAKkE,EAAQqB,OAAOC,OAASC,EAC7B9F,UAAWC,KAEbE,EAAAA,EAAAA,KAAA,OAAAD,SACG6E,IAAW5E,EAAAA,EAAAA,KAAA,SAAO0B,KAAM,OAAQqB,SAzBf,SAACC,GACvBA,EAAE4C,OAAOC,MAAMC,QACjBT,EAAUrC,EAAE4C,OAAOC,MAAM,GAE7B,SAwBOzD,GACCpC,EAAAA,EAAAA,KAAC+F,EAAe,CACd/E,cAAeoD,EACfA,QAASA,EACTlD,SA3BO,SAACC,GAChBmE,EAAYnE,GACZkB,GAAY,EACd,KA2BQrC,EAAAA,EAAAA,KAAC0E,EAAW,CACVG,aAAc,WACZxC,GAAY,EACd,EACA+B,QAASA,EACTQ,QAASA,SAMrB,ECvCA,EAvBgB,SAAH9D,GAON,IANLsD,EAAOtD,EAAPsD,QACA7B,EAAMzB,EAANyB,OACAO,EAAYhC,EAAZgC,aACA8B,EAAO9D,EAAP8D,QACAS,EAASvE,EAATuE,UACAC,EAAWxE,EAAXwE,YAEA,OACE1F,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAACgG,EAAW,CACVX,UAAWA,EACXC,YAAaA,EACbV,QAASA,EACTR,QAASA,EACT7B,OAAQA,EACRO,aAAcA,KAEhB9C,EAAAA,EAAAA,KAACiG,EAAgB,MAGvB,E,UCHC,IAEKC,EAAgB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,OAAAK,EAAAA,EAAAA,GAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,UAAA,CA4BnB,OA5BmBC,EAAAA,EAAAA,GAAAR,EAAA,EAAA1B,IAAA,iBAAAtB,MACpB,WACE,IAAIyD,EAASC,KAAKjH,MAAMkH,OAAOC,OAAOC,UACjCJ,IACHA,EAASC,KAAKjH,MAAMqH,iBAEtBJ,KAAKjH,MAAMsH,eAAeN,GAC1BC,KAAKjH,MAAMuH,UAAUP,EACvB,GAAC,CAAAnC,IAAA,oBAAAtB,MAED,WACE0D,KAAKO,gBACP,GAAC,CAAA3C,IAAA,qBAAAtB,MACD,SAAmBkE,GACbR,KAAKjH,MAAMkH,OAAOC,OAAOC,WAAaK,EAAUP,OAAOC,OAAOC,WAChEH,KAAKO,gBACT,GAAC,CAAA3C,IAAA,SAAAtB,MACD,WACE,OACElD,EAAAA,EAAAA,KAACqH,GAAOC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACFV,KAAKjH,OAAK,IACdiF,SAAUgC,KAAKjH,MAAMkH,OAAOC,OAAOC,UACnC3C,QAASwC,KAAKjH,MAAMyE,QACpB7B,OAAQqE,KAAKjH,MAAM4C,OACnBO,aAAc8D,KAAKjH,MAAMmD,aACzBuC,UAAWuB,KAAKjH,MAAM0F,YAG5B,KAACa,CAAA,CA5BmB,CAAS7F,EAAAA,WAsC/B,GAAekH,EAAAA,EAAAA,KACb5F,EAAAA,EAAAA,KARoB,SAACC,GAAK,MAAM,CAChCwC,QAASxC,EAAMC,YAAYuC,QAC3B7B,OAAQX,EAAMC,YAAYU,OAC1ByE,gBAAiBpF,EAAM4F,KAAKb,OAC5Bc,OAAQ7F,EAAM4F,KAAKC,OACpB,GAG0B,CACvBR,eAAAA,EAAAA,GACAC,UAAAA,EAAAA,GACApE,aAAAA,EAAAA,GACAuC,UAAAA,EAAAA,GACAC,YAAAA,EAAAA,MAtDJ,SAAoBoC,GAOlB,OANA,SAAiC/H,GAC/B,IAAIgI,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXhB,GAASiB,EAAAA,EAAAA,MACb,OAAO/H,EAAAA,EAAAA,KAAC0H,GAASJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAK3H,GAAK,IAAEkH,OAAQ,CAAEc,SAAAA,EAAUE,SAAAA,EAAUf,OAAAA,KAC7D,CAEF,GAiDEkB,EAAAA,EATF,CAUE9B,E","sources":["webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Posts/Post.module.css?5aca","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postBlock\":\"MyPosts_postBlock__PmS1m\",\"posts\":\"MyPosts_posts__Xu6py\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__yEsuP\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return <div className={s.item}>\r\n    <div>{props.massage}</div>\r\n    <img src=\"https://cdn1.flamp.ru/dca5e616d0d0278f7ac33bb2ace74573.jpg\" />\r\n    <div>\r\n      <span>Like {props.likesCount}</span>\r\n    </div>\r\n  </div>\r\n\r\n}\r\n\r\nexport default Post;","import { Field, Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Posts/Post\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = props.posts.map((p) => (\r\n    <Post massage={p.message} likesCount={p.likesCount} key={p.id} />\r\n  ));\r\n  return (\r\n    <div className={s.postBlock}>\r\n      <div>\r\n        <h3>My posts</h3>\r\n        <div>\r\n          New post\r\n          <AddPostForm props={props} />\r\n          <div className={s.posts}>{postsElements}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst AddPostForm = ({ props }) => {\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n  return (\r\n    <Formik initialValues={{ newPostText: \"\" }} onSubmit={onAddPost}>\r\n      <Form>\r\n        <Field\r\n          as={\"textarea\"}\r\n          placeholder={\"Add your post\"}\r\n          name={\"newPostText\"}\r\n        />\r\n        <div>\r\n          <button type=\"submit\">Add post </button>\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPostActionCreator } from \"../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__wvuZ0\",\"mainPhoto\":\"ProfileInfo_mainPhoto__-N+pF\",\"contact\":\"ProfileInfo_contact__W5zH+\"};","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <b>Status: </b>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"---------\"}{\" \"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            onChange={onStatusChange}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst validationSchema = Yup.object({\r\n  aboutMe: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  fullName: Yup.string().required(\"Required\"),\r\n  contacts: Yup.object({\r\n    facebook: Yup.string().url(\"Invalid URL\"),\r\n    website: Yup.string().url(\"Invalid URL\"),\r\n    vk: Yup.string().url(\"Invalid URL\"),\r\n    twitter: Yup.string().url(\"Invalid URL\"),\r\n    instagram: Yup.string().url(\"Invalid URL\"),\r\n    youtube: Yup.string().url(\"Invalid URL\"),\r\n    github: Yup.string().url(\"Invalid URL\"),\r\n    mainLink: Yup.string().url(\"Invalid URL\"),\r\n  }),\r\n});\r\n\r\nconst ProfileDataForm = ({ onSubmit, initialValues, profile }) => {\r\n  return (\r\n    <Formik\r\n      validationSchema={validationSchema}\r\n      initialValues={initialValues}\r\n      onSubmit={onSubmit}\r\n    >\r\n      <Form>\r\n        <div>\r\n          <button type={\"submit\"} id={\"submit\"} name={\"submit\"}>\r\n            Save\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <b>About me:</b>\r\n          </div>\r\n          <Field\r\n            placeholder={\"About Me\"}\r\n            type={\"textarea\"}\r\n            id={\"aboutMe\"}\r\n            name={\"aboutMe\"}\r\n          />\r\n          <div>\r\n            <ErrorMessage name=\"aboutMe\" />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <b>Looking for a job:</b>\r\n          <Field type={\"checkbox\"} name={\"lookingForAJob\"} />\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <b>Looking for a job description:</b>\r\n          </div>\r\n          <Field\r\n            placeholder={\"Description\"}\r\n            type={\"textarea\"}\r\n            id={\"lookingForAJobDescription\"}\r\n            name={\"lookingForAJobDescription\"}\r\n          />\r\n          <div>\r\n            <ErrorMessage name=\"lookingForAJobDescription\" />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <b>Full name:</b>\r\n          </div>\r\n          <Field\r\n            placeholder={\"Full name\"}\r\n            type={\"textarea\"}\r\n            id={\"fullName\"}\r\n            name={\"fullName\"}\r\n          />\r\n          <div>\r\n            <ErrorMessage name=\"fullName\" />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {Object.keys(profile.contacts).map((key) => {\r\n            return (\r\n              <div key={key} className={s.contact}>\r\n                <b>\r\n                  {key}:{\" \"}\r\n                  <Field\r\n                    type={\"input\"}\r\n                    name={\"contacts.\" + key}\r\n                    placeholder={key}\r\n                  />\r\n                </b>\r\n                <div>\r\n                  <ErrorMessage name={`contacts.${key}`} />\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default ProfileDataForm;\r\n","import React, { useState } from \"react\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/imges/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  savePhoto,\r\n  saveProfile,\r\n}) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n  const onSubmit = (values) => {\r\n    saveProfile(values);\r\n    setEditMode(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img src=\"https://images.ctfassets.net/hrltx12pl8hq/4f6DfV5DbqaQUSw0uo0mWi/6fbcf889bdef65c5b92ffee86b13fc44/shutterstock_376532611.jpg?fit=fill&w=800&h=300\" />\r\n      </div>\r\n      <div className={s.descriptionBlock}>\r\n        <div>\r\n          <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n        </div>\r\n        <div>\r\n          <img\r\n            src={profile.photos.large || userPhoto}\r\n            className={s.mainPhoto}\r\n          />\r\n          <div>\r\n            {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n          </div>\r\n        </div>\r\n        {editMode ? (\r\n          <ProfileDataForm\r\n            initialValues={profile}\r\n            profile={profile}\r\n            onSubmit={onSubmit}\r\n          />\r\n        ) : (\r\n          <ProfileData\r\n            goToEditMode={() => {\r\n              setEditMode(true);\r\n            }}\r\n            profile={profile}\r\n            isOwner={isOwner}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner && (\r\n        <div>\r\n          <button onClick={goToEditMode}>Edit</button>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>About me:</b> {profile.aboutMe || \"...\"}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job:</b>\r\n        {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job description:</b>\r\n        {profile.lookingForAJobDescription}\r\n      </div>\r\n      <div>\r\n        <b>Full name:</b> {profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>:{\" \"}\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <Contact\r\n              key={key}\r\n              contactTitle={key}\r\n              contactValue={profile.contacts[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={s.contact}>\r\n      <b>{contactTitle}: </b> {contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  savePhoto,\r\n  saveProfile,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        savePhoto={savePhoto}\r\n        saveProfile={saveProfile}\r\n        isOwner={isOwner}\r\n        profile={profile}\r\n        status={status}\r\n        updateStatus={updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n} from \"../Redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\nimport { withAuthRedirect } from \"../../HOC/withAuthRedirect\";\r\n\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return <Component {...props} router={{ location, navigate, params }} />;\r\n  }\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.router.params.profileId;\r\n    if (!userId) {\r\n      userId = this.props.autorizedUserId;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.router.params.profileId != prevProps.router.params.profileId)\r\n      this.refreshProfile();\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.router.params.profileId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  autorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"names":["props","_jsxs","className","s","children","_jsx","massage","src","likesCount","MyPosts","React","postsElements","posts","map","p","Post","message","id","AddPostForm","_ref","Formik","initialValues","newPostText","onSubmit","values","addPost","Form","Field","as","placeholder","name","type","connect","state","profilePage","dispatch","addPostActionCreator","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","validationSchema","Yup","aboutMe","min","max","required","fullName","contacts","facebook","url","website","vk","twitter","instagram","youtube","github","mainLink","profile","ErrorMessage","Object","keys","key","concat","ProfileData","_ref2","isOwner","goToEditMode","onClick","lookingForAJob","lookingForAJobDescription","Contact","contactTitle","contactValue","_ref3","savePhoto","saveProfile","Preloader","ProfileStatusWithHooks","photos","large","userPhoto","target","files","length","ProfileDataForm","ProfileInfo","MyPostsContainer","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","userId","this","router","params","profileId","autorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","Profile","_objectSpread","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect"],"sourceRoot":""}