{"version":3,"file":"static/js/110.67fdc748.chunk.js","mappings":"gLACA,G,QAAA,CAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,SCU5I,EANgB,SAACA,GACb,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,OAASC,SAAEJ,EAAMK,SAEzC,E,UCSA,EAdmB,SAACL,GAClB,IAAIM,EAAO,YAAcN,EAAMO,GAE/B,OACEC,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,QAAY,IAAMA,EAAAA,OAASC,SAAA,EACzCH,EAAAA,EAAAA,KAAA,OACEQ,IAAI,6DACJC,IAAI,KACH,KACHT,EAAAA,EAAAA,KAACU,EAAAA,GAAO,CAACC,GAAIN,EAAKF,SAAEJ,EAAMa,SAGhC,E,oBCTMC,EAAgB,CACpBC,eAAgB,IA4BZC,EAAiB,SAAHC,GAAmB,IAAbjB,EAAKiB,EAALjB,MAIxB,OACEC,EAAAA,EAAAA,KAACiB,EAAAA,GAAM,CAACJ,cAAeA,EAAeK,SAJlB,SAACC,GACrBpB,EAAMqB,YAAYD,EAAOL,eAC3B,EAEgEX,UAC5DI,EAAAA,EAAAA,MAACc,EAAAA,GAAI,CAAAlB,SAAA,EACHH,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAACsB,EAAAA,GAAK,CACJC,GAAG,WACHC,YAAY,qBACZZ,KAAM,sBAGVZ,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAAA,UAAQyB,KAAM,SAAStB,SAAC,iEAKlC,EAEA,EA/CgB,SAACJ,GACf,IAAI2B,EAAQ3B,EAAM4B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GAAC,OACxC/B,EAAAA,EAAAA,KAACgC,EAAU,CAACpB,KAAMmB,EAAEnB,KAAiBN,GAAIyB,EAAEzB,IAAZyB,EAAEzB,GAAgB,IAG/C2B,EAAmBP,EAAMQ,SAASJ,KAAI,SAACK,GAAC,OAC1CnC,EAAAA,EAAAA,KAACoC,EAAO,CAAChC,QAAS+B,EAAE/B,SAAc+B,EAAE7B,GAAM,IAG5C,OAAKP,EAAMsC,QAET9B,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,QAAUC,SAAA,EACxBH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,aAAeC,SAAEyB,KACjCrB,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAAA,SAAWC,SAAA,CACxB8B,GACDjC,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAACe,EAAc,CAAChB,MAAOA,aAPLC,EAAAA,EAAAA,KAACsC,EAAAA,GAAQ,CAAC3B,GAAI,UAY1C,E,oBCdA,GAAe4B,E,QAAAA,KACbC,EAAAA,EAAAA,KAfoB,SAACd,GACrB,MAAO,CACLC,YAAaD,EAAMC,YAEvB,IAEyB,SAACc,GACxB,MAAO,CACLrB,YAAa,SAACN,GACZ2B,GAASC,EAAAA,EAAAA,GAAmB5B,GAC9B,EAEJ,IAIE6B,EAAAA,EAFF,CAGEC,E","sources":["webpack://react-kabzda-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__rAIxR\",\"dialogsItems\":\"Dialogs_dialogsItems__K4geT\",\"active\":\"Dialogs_active__tx2tM\",\"messages\":\"Dialogs_messages__VZ6lJ\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.dialog}>{props.message}</div>\r\n    )\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n    <div className={s.dialogs + \" \" + s.active}>\r\n      <img\r\n        src=\"https://cdn1.flamp.ru/dca5e616d0d0278f7ac33bb2ace74573.jpg\"\r\n        alt=\"\"\r\n      />{\" \"}\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Field, Form, Formik } from \"formik\";\r\n\r\nconst initialValues = {\r\n  newMessageBody: \"\",\r\n};\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map((d) => (\r\n    <DialogItem name={d.name} key={d.id} id={d.id} />\r\n  ));\r\n\r\n  let messagesElements = state.messages.map((m) => (\r\n    <Message message={m.message} key={m.id} />\r\n  ));\r\n\r\n  if (!props.isAuth) return <Navigate to={\"/login\"} />;\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        {messagesElements}\r\n        <div>\r\n          <AddMessageForm props={props} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddMessageForm = ({ props }) => {\r\n  const addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n  return (\r\n    <Formik initialValues={initialValues} onSubmit={addNewMessage}>\r\n      <Form>\r\n        <div>\r\n          <Field\r\n            as=\"textarea\"\r\n            placeholder=\"Enter your message\"\r\n            name={\"newMessageBody\"}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button type={\"submit\"}>Отправить</button>\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import { sendMassageCreator } from \"../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../HOC/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMassageCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"names":["props","_jsx","className","s","children","message","path","id","_jsxs","src","alt","NavLink","to","name","initialValues","newMessageBody","AddMessageForm","_ref","Formik","onSubmit","values","sendMessage","Form","Field","as","placeholder","type","state","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","messagesElements","messages","m","Message","isAuth","Navigate","compose","connect","dispatch","sendMassageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}