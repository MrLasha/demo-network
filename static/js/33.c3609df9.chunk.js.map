{"version":3,"file":"static/js/33.c3609df9.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Posts/Post.module.css?5aca","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postBlock\":\"MyPosts_postBlock__PmS1m\",\"posts\":\"MyPosts_posts__Xu6py\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__yEsuP\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return <div className={s.item}>\r\n    <div>{props.massage}</div>\r\n    <img src=\"https://cdn1.flamp.ru/dca5e616d0d0278f7ac33bb2ace74573.jpg\" />\r\n    <div>\r\n      <span>Like {props.likesCount}</span>\r\n    </div>\r\n  </div>\r\n\r\n}\r\n\r\nexport default Post;","import { Field, Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Posts/Post\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = props.posts.map((p) => (\r\n    <Post massage={p.message} likesCount={p.likesCount} key={p.id} />\r\n  ));\r\n  return (\r\n    <div className={s.postBlock}>\r\n      <div>\r\n        <h3>My posts</h3>\r\n        <div>\r\n          New post\r\n          <AddPostForm props={props} />\r\n          <div className={s.posts}>{postsElements}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst AddPostForm = ({ props }) => {\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n  return (\r\n    <Formik initialValues={{ newPostText: \"\" }} onSubmit={onAddPost}>\r\n      <Form>\r\n        <Field\r\n          as={\"textarea\"}\r\n          placeholder={\"Add your post\"}\r\n          name={\"newPostText\"}\r\n        />\r\n        <div>\r\n          <button type=\"submit\">Gaugzavne Ninos :D :D </button>\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPostActionCreator } from \"../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__wvuZ0\"};","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"---------\"}{\" \"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            onChange={onStatusChange}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport yes from \"../../../assets/imges/yes.png\";\r\nimport No from \"../../../assets/imges/No.jpg\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img src=\"https://images.ctfassets.net/hrltx12pl8hq/4f6DfV5DbqaQUSw0uo0mWi/6fbcf889bdef65c5b92ffee86b13fc44/shutterstock_376532611.jpg?fit=fill&w=800&h=300\" />\r\n      </div>\r\n      <div className={s.descriptionBlock}>\r\n        <div>\r\n          <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n        </div>\r\n        <div>\r\n          <img src={profile.photos.large} />\r\n        </div>\r\n        <div> About me: {profile.aboutMe}</div>\r\n        <div> Facebook: {profile.contacts.facebook}</div>\r\n        <div> My website: {profile.contacts.website}</div>\r\n        <div> Twiter: {profile.contacts.twitter}</div>\r\n        <div>\r\n          Looking for a job:\r\n          {\r\n            (profile.lookingForAJob = true ? (\r\n              <img src={yes} />\r\n            ) : (\r\n              <img src={No} />\r\n            ))\r\n          }\r\n        </div>\r\n        <div>\r\n          Looking for a job description:\r\n          {profile.lookingForAJobDescription}\r\n        </div>\r\n        <div> Full name: {profile.fullName}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = ({ profile, status, updateStatus }) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={profile}\r\n        status={status}\r\n        updateStatus={updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n} from \"../Redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\nimport { withAuthRedirect } from \"../../HOC/withAuthRedirect\";\r\n\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return <Component {...props} router={{ location, navigate, params }} />;\r\n  }\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.router.params.profileId;\r\n    if (!userId) {\r\n      userId = this.props.autorizedUserId;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  autorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"names":["props","_jsxs","className","s","children","_jsx","massage","src","likesCount","MyPosts","React","postsElements","posts","map","p","Post","message","id","AddPostForm","_ref","Formik","initialValues","newPostText","onSubmit","values","addPost","Form","Field","as","placeholder","name","type","connect","state","profilePage","dispatch","addPostActionCreator","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","profile","ProfileStatusWithHooks","photos","large","aboutMe","contacts","facebook","website","twitter","lookingForAJob","lookingForAJobDescription","fullName","Preloader","ProfileInfo","MyPostsContainer","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","userId","this","router","params","profileId","autorizedUserId","getUserProfile","getStatus","Profile","_objectSpread","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect"],"sourceRoot":""}